import fitz  # PyMuPDF
import os

# === Config ===
pdf_path = "document.pdf"
output_dir = "extraction_pdf"
image_min_width = 100
image_min_height = 100

os.makedirs(output_dir, exist_ok=True)
images_dir = os.path.join(output_dir, "images")
rendered_pages_dir = os.path.join(output_dir, "pages_rendues")
for d in (images_dir, rendered_pages_dir):
    os.makedirs(d, exist_ok=True)

# === Ouvrir le PDF ===
doc = fitz.open(pdf_path)

# === Fichier pour le texte extrait ===
text_output_path = os.path.join(output_dir, "texte_extrait.txt")
with open(text_output_path, "w", encoding="utf-8") as text_file:
    for page_num in range(len(doc)):
        page = doc[page_num]
        texte = page.get_text().strip()

        if not texte:
            # Page sans texte ‚Üí conversion en image compl√®te
            pix = page.get_pixmap(dpi=300)
            path = os.path.join(rendered_pages_dir, f"page_{page_num+1}.png")
            pix.save(path)
            print(f"üì∏ Page {page_num+1} convertie en image (pas de texte)")
            continue

        # Page avec texte ‚Üí √©crire le texte
        text_file.write(f"--- Page {page_num+1} ---\n")
        text_file.write(texte + "\n\n")

        # Extraire images int√©gr√©es assez grandes sans doublons
        seen_xrefs = set()
        for img in page.get_images(full=True):
            xref = img[0]
            if xref in seen_xrefs:
                continue
            seen_xrefs.add(xref)

            base_image = doc.extract_image(xref)
            width = base_image.get("width", 0)
            height = base_image.get("height", 0)

            if width >= image_min_width and height >= image_min_height:
                image_bytes = base_image["image"]
                ext = base_image["ext"]
                filename = f"page{page_num+1}_img{xref}.{ext}"
                path = os.path.join(images_dir, filename)
                with open(path, "wb") as img_file:
                    img_file.write(image_bytes)
                print(f"üñºÔ∏è Image extraite : {filename} ({width}x{height})")
            else:
                print(f"‚ö†Ô∏è Image ignor√©e : {width}x{height} trop petite")

print(f"\n‚úÖ Extraction termin√©e. Fichiers dans : {output_dir}")
